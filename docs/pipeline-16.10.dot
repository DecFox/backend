digraph {
    // that's DATA dependency, not DAG
    subgraph {
        node [shape = folder];
        report_incomplete;
        subgraph {
            node [fillcolor="#ffffe0" style=filled];
            report_raw [label = "RAW report\n1 Tb"];
            backup_raw [label = "RAW backup\n1 Tb"];
            measurement_sanitized [label = "Sanitised report\n1 Tb"]; // newline-separated JSON BLOB
        }
        measurement_index; // measurement_id, report, target, type, Data-URL, pointer{encoding, offset, size}
        measurement_features [label = "Features for\naggregation"]; // extracted from data for aggregation
        measurement_colours [label = "Known anomalies:\ngreen, yellow, orange, red"]; // measurement_id, anomaly_type, reason{json}
        blockpages_candidates;
        blockpages_known;
        geoip;
        asn;
    }

    "Closed by probe" [shape = cds];
    report_incomplete -> "Closed by probe" -> report_raw;
    report_incomplete -> "Timeout" -> report_raw;

    report_raw -> "Backup to S3" -> backup_raw;

    Normalise [label = "Normalise,\ndrop IP addr"];
    { asn geoip } -> Normalise;
    report_raw -> Normalise;
    Normalise -> measurement_sanitized;

    Index [label = "Build index\n(TODO: during normalisation)"];
    measurement_sanitized -> Index -> measurement_index;

    { measurement_features measurement_sanitized } -> "Possible blockpages:\nlook-alike non-mirrors" -> blockpages_candidates;

    "Divine intervention" [shape = rarrow];
    blockpages_candidates -> "Divine intervention" -> blockpages_known;

    "WEB extractor" [label = "WEB extractor\nper-measurement"];
    blockpages_known -> "WEB extractor";
    measurement_index -> "WEB extractor";
    measurement_sanitized -> "WEB extractor" -> measurement_colours;
    "WEB extractor" -> measurement_features;

    "Tor reader" [label = "Tor logs reader\nper-measurement"];
    measurement_index -> "Tor reader";
    measurement_sanitized -> "Tor reader" -> measurement_colours;
    "Tor reader" -> measurement_features;

    measurement_index -> "Latency anomaly\nagainst history";
    measurement_features -> "Latency anomaly\nagainst history" -> measurement_colours;
}
